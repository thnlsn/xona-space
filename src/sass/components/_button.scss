.btn {
  &, // This selection is only for <button/> elements, since they do not come with :link & :visited states, we have to target itself
    // link and visited are pseudo-classes, so we write the style for these specific states of the anchor element
    &:link,
    &:visited {
    text-decoration: none;
    display: inline-block; // This forces the block model to work and not allow the padding to overlap the above elements (a tags are inline by default)

    // This is code for making this class usable on <button/> (for use in forms) elements which come with some unwanted side effects
    border: none;
    cursor: pointer;

    font-size: var(--default-font-size);
  }

  &:hover {
  }

  &:active,
  &:focus {
    // This is for <button/> elements, as they come with a blue outline on focus
    outline: none;

    transform: scale(0.98);
  }

  &--basic {
    z-index: 1; // New context
    &:link,
    &:visited {
      border: 1px solid var(--color-white);
      text-decoration: none;
      text-transform: capitalize;

      width: 60%;
      padding: 1.5rem 1rem 1.5rem 1rem;

      position: relative; // So ::after is based on btn position

      transition: color 0.15s 0.009s, transform 0.1s;
      color: currentColor;
    }
    &:hover {
      // Text should turn black
      color: var(--color-black);
      // ::after styles will occur when btn is hovered
      &::after {
        height: 100%;
      }
    }

    // ::active is a pseudo-element, it is not in the html markup, but it does exist on the page
    &::after {
      content: '';
      display: inline-block;
      width: 100%; // 100% of the height of .btn

      position: absolute;
      bottom: 0; // Coordinates defined based on the nearest parent with position: relative (so .btn)
      left: 0;

      z-index: -1; // Set behind the real button so it does not cover the text
      background-color: var(--color-white);

      transition: height 0.2s cubic-bezier(0.38, 1.1, 0.64, 0.96);
      height: 0; // 100% of the height of .btn
    }
  }

  &__arrow {
    &:link,
    &:visited {
      display: inline-block; //
      text-shadow: 0 0 5px #000;
      color: currentColor; //

      font-size: 2rem;

      transition: linear 1.2s;
      border-bottom: 1px solid var(--color-white);
    }

    // RIGHT ARROW TO SIGNIFY A LINK
    .btn__arrow--rarr {
      transition: transform 0.5s, color 0.5s;
      display: inline-block;
    }
    // LEFT ARROW TO SIGNIFY A LINK
    .btn__arrow--larr {
      transition: transform 0.5s, color 0.5s;
      display: inline-block;
    }

    // When :hover, animate the right arrow
    &:hover > .btn__arrow--rarr {
      color: var(--color-primary-light);
      transform: translateX(5px);
    }
    // When :active, animate the right arrow
    &:active > .btn__arrow--rarr {
      transition: transform 0.2s, opacity 0.3s 0.05s;
      transform: translateX(75px);
      opacity: 0;
    }

    // When :hover, animate the right arrow
    &:hover > .btn__arrow--larr {
      color: var(--color-primary-light);
      transform: translateX(-5px);
    }
    // When :active, animate the right arrow
    &:active > .btn__arrow--larr {
      transition: transform 0.2s, opacity 0.3s 0.05s;
      transform: translateX(-75px);
      opacity: 0;
    }
  }
}
