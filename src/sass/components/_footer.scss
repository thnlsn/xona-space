@use '../breakpoints';

.footer {
  background-color: var(--color-grey-dark-5);
  color: var(--color-grey-light-3);

  padding: 4rem 30rem;
  @media only screen and (max-width: breakpoints.$bp-largest) {
    padding: 4rem 15rem;
  }
  @media only screen and (max-width: breakpoints.$bp-larger) {
    padding: 4rem 5rem;
  }
  /*   @media only screen and (max-width: breakpoints.$bp-large) {
    padding: 4rem 0rem;
  } */

  text-align: left;

  border-top: 1px solid var(--color-grey-dark-4);
  /* border-bottom: 1px solid var(--color-grey-dark-4); */

  display: flex;
  flex-direction: column;

  &__logo {
    justify-self: center;
    height: 3rem;
    width: 3rem;
  }

  &__container {
    display: flex;
    justify-content: space-between;

    @media only screen and (max-width: breakpoints.$bp-medium) {
      flex-direction: column;
      align-items: flex-start;

      & > * {
        flex: 0 1;
        margin-bottom: 2rem;
      }
    }
  }

  &__section {
    display: flex;
    flex-direction: column;
  }

  &__heading {
    color: var(--color-white);
    font-weight: 600;
  }

  &__copyright {
    color: var(--color-grey-dark-1);
    text-align: left;
  }

  &__socials {
    display: flex;
    gap: 1rem;
    margin: 1rem 0 0 0;
  }

  &__svg {
    padding: 3px;
    border-radius: 10px;
    color: var(--color-white);
    height: 3rem;
    width: 3rem;

    // Initial animation state
    transition: all 0.15s;
    background-color: var(--color-white);

    &:hover {
      background-color: var(--color-grey-light-3);
      transform: scale(1.01);
    }
  }
}

.subscribe-form {
  display: flex;
  height: 4rem;
  border: 1.5px solid var(--color-white);
  /*   border-radius: 7.5px; */
  overflow: hidden;

  &__input {
    padding: 1rem;
    border: none;
    background-color: transparent;
    color: var(--color-white);

    border-bottom: 2px solid transparent;

    transition: all 0.25s;

    vertical-align: top; //

    &:focus {
      outline: none;
      border-bottom: 2px solid var(--color-primary-light);

      &:invalid {
        // Only on a focused element, should this apply (and only when it is invalid)
        border-bottom: 2px solid var(--color-invalid);
      }
    }
  }

  &__btn {
    display: inline-block;

    font-family: 'Josefin Sans', sans-serif;
    font-size: var(--default-font-size);

    background-color: transparent;
    color: var(--color-white);
    padding: 1rem;

    border: none;
    border-left: 1.5px solid var(--color-white);
    cursor: pointer;

    transition: all 0.15s;

    &:hover {
      background-color: var(--color-primary);
    }

    &:active,
    &:focus {
      outline: 0;
    }

    &:active {
      transform: scale(0.99);
    }
  }
}
